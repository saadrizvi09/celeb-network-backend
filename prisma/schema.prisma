
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Celebrity {
  
  id                          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                        String    @unique @db.VarChar
  country                     String    @db.VarChar 
  profileImageUrl             String?   @db.VarChar 
  youtubeChannel              String?   @db.VarChar 
  spotifyId                   String?   @db.VarChar 
  imdbId                      String?   @db.VarChar 
  fanbaseCount                Int       @default(0)
  sampleSetlistOrKeynoteTopics Json?    
  createdAt                   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt                   DateTime  @default(now()) @db.Timestamp(6)
  description                 String?   
  instagramHandle             String?   @db.VarChar 
  category                    Json      @default("[]") 
   userId                  String?   @unique @db.Uuid 
  user                    User?     @relation(fields: [userId], references: [id])

  followedBy Follow[]

  @@map("celebrities")
}

model User {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid 
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  follows Follow[]
    celebrityProfile Celebrity?

}

model Follow {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid 
  userId       String    @db.Uuid 
  celebrityId  String    @db.Uuid 
  followedAt   DateTime  @default(now())

  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  celebrity    Celebrity @relation(fields: [celebrityId], references: [id], onDelete: Cascade)

  @@unique([userId, celebrityId]) 
}
